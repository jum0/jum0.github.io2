<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>jum0</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2020-01-26T10:22:22+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>jum0</name>
   <email></email>
 </author>

 
 <entry>
   <title>TIL_20200124</title>
   <link href="http://localhost:4000/til/2020/01/24/TIL/"/>
   <updated>2020-01-24T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/24/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200124&quot;&gt;2020.01.24&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UITextFieldDelegate&lt;/code&gt;의 메소드 중에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;textFieldShouldEndEditing&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;textFieldDidEndEditing&lt;/code&gt;의 차이. &lt;code class=&quot;highlighter-rouge&quot;&gt;textFieldShouldEndEditing&lt;/code&gt;은 사용자가 입력(수정)을 마치려고 할 때 호출. text가 valid한지 확인하기 위해 사용. &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; return. &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;를 반환하면 text field가 resign되지 않음. &lt;code class=&quot;highlighter-rouge&quot;&gt;textFieldDidEndEditing&lt;/code&gt;은 사용자가 입력(수정)을 마치고 호출 됨.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Swift) Optionals / nil / Forced Unwrapping / Optional Binding / Optional Chaining / Nil Coalescing Operator 정리</title>
   <link href="http://localhost:4000/swift/2020/01/22/optional-optional_binding-optional_chaining-nil_coalescing/"/>
   <updated>2020-01-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/swift/2020/01/22/optional-optional_binding-optional_chaining-nil_coalescing</id>
   <content type="html">&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;

&lt;p&gt;THE SWIFT PROGRAMMING LANGUAGE SWIFT 5.1 참조&lt;/p&gt;

&lt;p&gt;https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html&lt;/p&gt;

&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;

&lt;h4 id=&quot;1-optionals&quot;&gt;1. Optionals&lt;/h4&gt;

&lt;h4 id=&quot;2-nil&quot;&gt;2. nil&lt;/h4&gt;

&lt;h4 id=&quot;3-forced-unwrapping&quot;&gt;3. Forced Unwrapping&lt;/h4&gt;

&lt;h4 id=&quot;4-optional-binding&quot;&gt;4. Optional Binding&lt;/h4&gt;

&lt;h4 id=&quot;5-optional-chaining&quot;&gt;5. Optional Chaining&lt;/h4&gt;

&lt;h4 id=&quot;6-nil-coalescing-operator&quot;&gt;6. Nil Coalescing Operator&lt;/h4&gt;

&lt;h2 id=&quot;1-optionals-1&quot;&gt;1. Optionals&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;값이 존재할 수도, 존재하지 않을 수도 있다는 두 가지 가능성을 의미.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값이 존재하여, 값에 접근하기 위해 optional을 unwrap 할 수도 있고, 값이 없을 수도 있음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 를 사용하여 나타냄.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 상수 number에 Int 값이 존재할 수도, 존재하지 않을 수도 있다는 것을 의미.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Int?&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Int&lt;/code&gt;는 다름.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;possibleNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;123&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;convertedNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// convertedNumber는 &quot;Int?&quot; 타입이나 &quot;optional Int&quot;로 추정됨.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;initializer가 초기화하는 것을 실패할 수도 있기 때문에, print 해보면 Int 말고 optional Int로 반환함. Optional Int는 Int?로 표시되며 Int와는 다르다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-nil-1&quot;&gt;2. nil&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Optional 변수에 nil을 할당함으로써 값이 없는 상태를 나타냄.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;serverResponseCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// serverResponseCode는 404의 Int 값을 가지고 있음.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;serverResponseCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// serverResponseCode는 현재 값을 가지고 있지 않음.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;blockquote&gt;
      &lt;p&gt;nil은 optional이 아닌 상수나 변수에 사용할 수 없음.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본 값을 설정하지 않고 optional 변수를 선언하면, 그 변수는 자동으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;이 할당됨.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;surveyAnswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// surveyAnswer에 자동으로 nil이 할당됨.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-forced-unwrapping-1&quot;&gt;3. Forced Unwrapping&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;optional 값을 강제로 꺼내오는 것.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;optional이 확실하게 값을 가지고 있다고 가정할 때 사용.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 를 사용.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;성공적으로 Build 되어도 오류가 발생할 수 있으므로 사용하는 것을 지양하며, 보통 &lt;code class=&quot;highlighter-rouge&quot;&gt;If&lt;/code&gt; 구문과 같이 사용됨.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertedNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;covertedNumber가 integer &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;convertedNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 값을 가지고 있다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Print: convertedNumber가 integer 123 값을 가지고 있다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-optional-binding-1&quot;&gt;4. Optional Binding&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;값을 가지고 있는지 없는지 알고자 할 때 사용.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값이 있다면 상수나 변수에 할당하여 그 값을 사용하기 위해서 쓰임.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if let&lt;/code&gt; (또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;if var&lt;/code&gt;) 구문을 통해서 사용.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 1. Optionals 예제에서 쓰인 변수 사용.&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;actualNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;String &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;는 integer &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actualNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 값을 가진다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;String &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;는 integer로 변환될 수 없다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Print: String &quot;123&quot;는 integer 123 값을 가진다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;를 사용하여 여러 optional과 조건을 동시에 확인 가능.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 예시 1.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;42&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;lt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;lt; 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Print: &quot;4 &amp;lt; 42 &amp;lt; 100&quot;&lt;/span&gt;
  
&lt;span class=&quot;c1&quot;&gt;// 예시 2.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;42&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;lt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;lt; 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Print: &quot;4 &amp;lt; 42 &amp;lt; 100&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-optional-chaining-1&quot;&gt;5. Optional Chaining&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;하위 프로퍼티에 optional 값이 있는지 연속적으로 확인하는 방식.
    &lt;ul&gt;
      &lt;li&gt;중간에 하나라도 nil이 발견된다면 nil을 반환함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;residence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Residence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Residence&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;numberOfRooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;jumo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;residence 변수가 Residence 클래스를 상속받고 있는데, Residence 클래스의 type이 optional이므로 Person 타입의 인스턴스(jumo)가 만들어졌을 때,  변수 residence의 초기값은 nil이 됨(초기값을 설정하지 않고 optional 변수를 선언하므로).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;roomCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jumo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;residence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numberOfRooms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jumo는 객실 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roomCount&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;를 가지고 있습니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;객실의 수를 찾을 수 없습니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Print: 객실의 수를 찾을 수 없습니다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;위와 같은 결과가 나오는 이유는 인스턴스 jumo의 프로퍼티 residence가 nil이므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;문에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;jumo.residence?&lt;/code&gt; 그 다음 확인할 프로퍼티 &lt;code class=&quot;highlighter-rouge&quot;&gt;numberOfRooms&lt;/code&gt;로 넘어가지 않아, &lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;문을 수행하게 되기 때문에. &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;문을 실행시키기 위해서는, &lt;code class=&quot;highlighter-rouge&quot;&gt;let jumo = Person()&lt;/code&gt; 코드 다음에 &lt;code class=&quot;highlighter-rouge&quot;&gt;jumo.residence = Residence()&lt;/code&gt; 코드를 추가하면 됨.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;6-nil-coalescing-operator-1&quot;&gt;6. Nil Coalescing Operator&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;nil-coalescing operator을 삼항다항식으로 나타내면 아래의 코드와 같은 의미를 지님.&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// a의 값이 nil이 아니면 a에 a를 forced-unwrap한 값(a!)을 넣고, nil이라면 a에 b의 값을 할당함.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;??&lt;/code&gt; 사용.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;defaultColorName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userDefinedColorName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 초기값 nil&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;colorNameToUse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDefinedColorName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultColorName&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// userDefinedColorName이 nil이므로, colorNameToUse 변수에 defaultColorName의 값인 &quot;red&quot;를 할당함.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;userDefinedColorName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;green&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;colorNameToUse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDefinedColorNmae&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultColorName&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// userDefinedColorName의 값이 nil이 아니므로 colorNameToUse에 할당함.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// colorNameToUse의 값은 &quot;green&quot;이 됨.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;혹시 잘못된 부분이 있으면 말씀해주세요! 감사합니다:)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_20200121</title>
   <link href="http://localhost:4000/til/2020/01/21/TIL/"/>
   <updated>2020-01-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/21/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200121&quot;&gt;2020.01.21&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Udemy Angela Yu 강의 section 12.를 통해서 한 VC에서 다른 VC로 데이터 옮기는 것을 연습. Optional binding, Optional Chaining에 대해서 복습.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_20200120</title>
   <link href="http://localhost:4000/til/2020/01/20/TIL/"/>
   <updated>2020-01-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/20/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200120&quot;&gt;2020.01.20&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Udemy Angela Yu 강의 section 11. &lt;code class=&quot;highlighter-rouge&quot;&gt;performSegue&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;prepare&lt;/code&gt; 배웠는데, 검색을 통해서 좀 더 확실하게 이해해야겠다. 그리고 많이 쓰이면 Swift를 특별하게 만들어 주는 Optional에 대해서도 배웠는데, 조금 복잡한 것 같아서 포스트로 정리하면서 다시 한번 이해해봐야겠다.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_20200118</title>
   <link href="http://localhost:4000/til/2020/01/18/TIL/"/>
   <updated>2020-01-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/18/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200118&quot;&gt;2020.01.18&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;udemy 강의를 통해서 기본적인 부분 공부. class와 struct 비교. pow 메서드, 소수점 아랫 자리에서 반올림하는 방법.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Swift) Class와 Struct 비교</title>
   <link href="http://localhost:4000/swift/2020/01/18/class_versus_struct/"/>
   <updated>2020-01-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/swift/2020/01/18/class_versus_struct</id>
   <content type="html">&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;

&lt;h4 id=&quot;1-class-와-struct-비교&quot;&gt;1. class 와 struct 비교&lt;/h4&gt;

&lt;h4 id=&quot;2-class&quot;&gt;2. class&lt;/h4&gt;

&lt;h4 id=&quot;3-struct&quot;&gt;3. struct&lt;/h4&gt;

&lt;h4 id=&quot;4-참고&quot;&gt;4. 참고&lt;/h4&gt;

&lt;h2 id=&quot;1-class-와-struct-비교-1&quot;&gt;1. class 와 struct 비교&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Class&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Struct&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;상속&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;가능&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;불가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;초기화&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;필요&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;선택&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;데이터 전달&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pass(call) by reference&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pass(call) by value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;기타&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;override (상속과 관련)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;mutating&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;2-class-1&quot;&gt;2. Class&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.swift&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VIPAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jumo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 인출금은 10000원, 수수료는 500원, 잔액은 39500원입니다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// VIP고객으로 수수료 500원이 입금되었습니다. 잔액은 40000원입니다&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 40000&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 40000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// AccountClass.swift - 부모 클래스(super class)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// struct Accont와 구분하기 위해서 AccountClass를 사용&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AccountClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
  
  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10500&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;인출금은 10000원, 수수료는 500원, 잔액은 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;원입니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// VIPAccount.swift - 자식 클래스(sub class)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VIPAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AccountClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;VIP고객으로 수수료 500원이 입금되었습니다. 잔액은 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;원입니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상속&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class VIPAccount&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;class AccountClass&lt;/code&gt;를 상속하고 있음. &lt;code class=&quot;highlighter-rouge&quot;&gt;VIPAccount.swift&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;class VIPAccount&lt;/code&gt; 옆에 상속받을 클래스(&lt;code class=&quot;highlighter-rouge&quot;&gt;AccountClass&lt;/code&gt;)를 씀.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;초기화&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Account.swift&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;var name: String&lt;/code&gt;과 같이 프로퍼티의 타입만 적어준 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; 키워드를 통해 초기화를 해야함. &lt;code class=&quot;highlighter-rouge&quot;&gt;var name = &quot;jumo&quot;&lt;/code&gt;와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; 안의 프로퍼티에 값을 지정한 경우 초기화하지 않아도 됨.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pass(call) by reference&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;예를 들어, &lt;code class=&quot;highlighter-rouge&quot;&gt;account1&lt;/code&gt;이라는 계좌가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Desktop/jum0.github.io/_post/Swift&lt;/code&gt;에 있다고 가정하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;let account2 = account1&lt;/code&gt;이라고 했을 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;account2&lt;/code&gt;에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;account1&lt;/code&gt; 계좌가 있는 위 주소를 전달하는 것.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.swift&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VIPAccount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jumo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 인출금은 10000원, 수수료는 500원, 잔액은 39500원입니다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// VIP고객으로 수수료 500원이 입금되었습니다. 잔액은 40000원입니다&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 40000&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 40000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;class는 pass(call) by reference이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;account1.withdraw10000won()&lt;/code&gt;와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;account1&lt;/code&gt;의 메서드를 실행해도  &lt;code class=&quot;highlighter-rouge&quot;&gt;account1.balance&lt;/code&gt;와  &lt;code class=&quot;highlighter-rouge&quot;&gt;account2.balence2&lt;/code&gt;가 같이 바뀜.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;override&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;override 키워드를 통해서 super class의 메서드에 덮어쓰기 가능. super class에 있는 있는 메서드를 사용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;super.메서드명&lt;/code&gt;을 통해서 사용 가능(override func 말고도 sub class 내에서 자유롭게 사용 가능).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-struct-1&quot;&gt;3. Struct&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.swift&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AccountStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jumo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;// 초기화 생략하면 AccountStrcut()도 가능&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 인출금은 10000원, 수수료는 500원, 잔액은 39500원입니다.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 39500&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 50000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// AccountStruct.swift&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// class Accont와 구분하기 위해서 AccountStruct를 사용&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AccountStruct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
    
  
  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;mutating&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10500&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;인출금은 10000원, 수수료는 500원, 잔액은 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;원입니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;상속 불가능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;초기화&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;초기화하는 것은 선택 (&lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; 키워드).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pass(call) by value&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.swift&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AccountStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jumo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;// 초기화 생략하면 AccountStrcut()도 가능&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 인출금은 10000원, 수수료는 500원, 잔액은 39500원입니다.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 39500&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 50000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;class와 다르게 &lt;code class=&quot;highlighter-rouge&quot;&gt;var account2 = account1&lt;/code&gt;는 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;account1&lt;/code&gt;이 가리키는 인스턴스(객체)를 참조하는 것이 아닌 새로운 객체 생성을 의미하므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;account1.withdraw10000won()&lt;/code&gt; 코드 실행 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;account1.balance&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;account2.balance&lt;/code&gt;는 다름.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;mutating
    &lt;ul&gt;
      &lt;li&gt;struct 내의 메서드 중에서 프로퍼티에 영향을 주면(update) &lt;code class=&quot;highlighter-rouge&quot;&gt;mutating&lt;/code&gt; 키워드를 붙임.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AccountStruct.swift&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;withdraw10000won&lt;/code&gt; 메서드에 &lt;code class=&quot;highlighter-rouge&quot;&gt;mutating&lt;/code&gt; 키워드를 붙는 이유는 struct 내의 프로퍼티(&lt;code class=&quot;highlighter-rouge&quot;&gt;balance&lt;/code&gt;)에 영향을 주는 메서드이기 때문.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-참고-1&quot;&gt;4. 참고&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;초기화 할 때, parameter를 변경할 수 있음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AccountStruct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
        
  &lt;span class=&quot;c1&quot;&gt;// parameter 변경&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;mutating&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withdraw10000won&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10500&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;인출금은 10000원, 수수료는 500원, 잔액은 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;원입니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;account1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jumo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apple에서는 Default로 struct 사용하기를 권장&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;https://developer.apple.com/documentation/swift/choosing_between_structures_and_classes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;혹시 잘못된 부분이 있으면 말씀해주세요! 감사합니다:)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_20200117</title>
   <link href="http://localhost:4000/til/2020/01/17/TIL/"/>
   <updated>2020-01-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/17/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200117&quot;&gt;2020.01.17&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;NaverVocaQuizClone 프로젝트에서 문제를 풀고 결과를 본 후, 다시 풀기 버튼을 클릭하면 다시 퀴즈를 풀 수 있는 기능을 추가했다. 코드가 뒤죽박죽으로 있어서 어떤 부분을 수정해야 기능이 제대로 동작하는지 헷갈렸다. 코드들도 좀 더 간결하게, 다른 사람이 보더라도 이해할 수 있는 방향으로 짜고 싶은데 쉬운 게 아닌 것 같다.&lt;/li&gt;
  &lt;li&gt;추가하려고 계획 중인 부분은 맞췄을 떄와 틀렸을 때 사용자가 알 수 있도록 시각적인 효과를 주는 것. 다시 풀기 버튼 크기도 줄이고 싶어서 Contraint를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bottom Vertical Stack View&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;의 1/4을 하면 되겠다고 생각했는데, 안된다. 뭐지… 아닌가벼.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_20200116</title>
   <link href="http://localhost:4000/til/2020/01/16/TIL/"/>
   <updated>2020-01-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/16/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200116&quot;&gt;2020.01.16&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;NaverVocaQuizClone 프로젝트에서 퀴즈를 맞춘 개수에 따라 점수가 표기되도록 struct를 만들었다. 기존의 아이디어는 &lt;code class=&quot;highlighter-rouge&quot;&gt;struct ScoreBrain&lt;/code&gt;의 메서드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;struct VocaBrain&lt;/code&gt;의 메서드를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;score&lt;/code&gt; 변수를 호출한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;struct ScoreBrain&lt;/code&gt;의 메서드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController.swift&lt;/code&gt;로 바로 리턴해주는 방식으로 진행하려고 했는데, 계속 값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;ScoreBrain&lt;/code&gt;에 안넘어와서 다른 방식으로 했다. 바꾼 방식은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController.swift&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ScoreBrain&lt;/code&gt;의 메서드를 호출하는데 그 인자를 &lt;code class=&quot;highlighter-rouge&quot;&gt;VocaBrain&lt;/code&gt;의 메서드로부터 가져와서 하는 방식이다. 이렇게 하는 게 더 좋은지는 사실 잘 모르겠지만, 일단 돌아가서 좋았다ㅎ&lt;/li&gt;
  &lt;li&gt;이번 NaverVocaQuizClone 프로젝트 끝내고 실제 앱 출시를 위한 아이디어 조금 기획함.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_20200115</title>
   <link href="http://localhost:4000/til/2020/01/15/TIL/"/>
   <updated>2020-01-15T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/15/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200115&quot;&gt;2020.01.15&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;진행하고 있는 NaverVocaQuizClone 프로젝트(라고 하기도 뭐하지만)에서 문제가 넘어갈 때, 한 버튼만 깜빡이지 않고 넘어가던데 이유는 그 버튼의 속성이 Custom이어서. System으로 속성을 바꿔주니 같아짐.&lt;/li&gt;
  &lt;li&gt;결과가 나오는 메서드를 다 만들지 못했는데, 구성하면 코드가 지저분해줄 수도 있겠다는 생각. Design pattern 적용하고 싶은데 좀 더 공부해서 해봐야겠다. 잘 이해가 되진 않는다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_20200114</title>
   <link href="http://localhost:4000/til/2020/01/14/TIL/"/>
   <updated>2020-01-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/14/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200114&quot;&gt;2020.01.14&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;udemy에서 배웠던 것들을 복습하기 위해서 네이버 단어 퀴즈 사이트를 어플화하고 있다. 오토레이아웃에서 엄청 헤매다가 오늘 드디어 코드 좀 짰다. 나를 힘들게 했던 오토레이아웃의 해답은 Equal Heights 요놈이었다. 옛날에 했던 프로젝트를 보고 기억해냈다. 적용법은 적용하고자 하는 오브젝트 두 개를 같이 잡고 하기.&lt;/li&gt;
  &lt;li&gt;이름만 거창한 프로젝트 NaverVocaQuizClone UI 초안 완성. 코드 연결해서 클릭하면 새로운 단어 문제가 나옴. 정답인지 오답인지는 print로만 해놓음 시각적인 부분으로 변경 예정.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_20200109</title>
   <link href="http://localhost:4000/til/2020/01/09/TIL/"/>
   <updated>2020-01-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2020/01/09/TIL</id>
   <content type="html">&lt;h3 id=&quot;20200109&quot;&gt;2020.01.09&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;최근에 티스토리 블로그를 시작했다가 ‘개발자라면 깃허브 블로그지!’라는 생각에 블로그를 만들었다. 결과는 하루 다 잡아먹었다. TIL이 아니라 Today I Wasted가 됐다. 생각보다 custom이라는 게 자유도가 높은만큼 바꿀 게 엄청 많았다. 그래도 어느 정도 꾸민 것 같아서 괜히 뿌듯. 블로그 제대로 한다고 하니깐 당장 색부터 고민됐는데, PANTONE 2020 올해의 색 클래식블루로 하고 보니깐 흠 이뿌다. 나름 디자인 좀 했다고 로고도 만들었는데, 날 영원히 만족시키지 못할 것 같아서 적당히(말이 적당히..ㅎ) 하고 끝냈다.&lt;/li&gt;
  &lt;li&gt;블로그에 Google Search Console, Google Analytics 연결 (삽질..)&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>한 줄 삭제 단축키</title>
   <link href="http://localhost:4000/ios/2019/12/27/shortcut_of_one_line_deletion/"/>
   <updated>2019-12-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/ios/2019/12/27/shortcut_of_one_line_deletion</id>
   <content type="html">&lt;p&gt;VSCode에는 한 줄 전체를 삭제하는 단축키가 있는데, Xcode에는 그런 기능이 없다ㅠ&lt;/p&gt;

&lt;p&gt;그래서 찾아보니 두 가지 방법을 통해서 비슷한 기능을 할 수 있다는 것을 알게 되었다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ctrl + A + K + K&lt;/li&gt;
  &lt;li&gt;Xcode 설정을 통한 단축키 만들기&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-ctrl--a--k--k&quot;&gt;1. Ctrl + A + K + K&lt;/h4&gt;

&lt;p&gt;1번은 기능의 조합인데, ctrl + A는 커서의 위치를 현재 커서가 있는 라인의 맨 앞으로 옮기는 단축키이다. 그리고 ctrl + K는 현재 커서가 있는 라인에서 커서의 위치 뒤에 있는 것들을 지우는  단축키이다. 그래서 K를 두 번 눌러주게 되면 내용 지우기 + 내용이 없어서 라인 지우기로 되어,  한 줄 전체를 삭제하는  기능을 하게 된다.&lt;/p&gt;

&lt;h4 id=&quot;2-xcode-설정을-통한-단축키-만들기&quot;&gt;2. Xcode 설정을 통한 단축키 만들기&lt;/h4&gt;

&lt;p&gt;단축키를 생성하는 방법은 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191227/1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Xcode를 실행하고 &lt;strong&gt;Xcode - Preferences&lt;/strong&gt;를 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Key Bidings 메뉴를 들어간 후, delete를 검색한다. Delete Line이라는 단축키가 있는데, 위의 사진과 다르게 오른쪽 부분이 비워져 있어서 원하는 단축키를 눌러 등록하면 된다.&lt;/p&gt;

&lt;p&gt;참고로 키를 눌러서 등록할 때, &lt;strong&gt;‘누른 키 조합 is bound to 머시기’&lt;/strong&gt; 이렇게 나오는 경우는 다른 단축키와 중복되었다는 것을 의미하므로 다른 키 조합을 이용해야 한다.&lt;/p&gt;

&lt;p&gt;혹시라도 잘못된 부분이 있으면 알려주세요!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>개발자 계정 등록하지 않고 아이폰으로 테스트하기</title>
   <link href="http://localhost:4000/ios/2019/12/21/test_without_apple_developer_account/"/>
   <updated>2019-12-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/ios/2019/12/21/test_without_apple_developer_account</id>
   <content type="html">&lt;p&gt;아이폰으로 Xcode를 빌드하기 위해서는 몇 가지만 체크하면 된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Xcode와 iOS 버전 확인&lt;/li&gt;
  &lt;li&gt;애플 개발자 계정 추가하기&lt;/li&gt;
  &lt;li&gt;앱 서명하기(sign the app)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;1-xcode와-ios-버전-확인&quot;&gt;1. Xcode와 iOS 버전 확인&lt;/h3&gt;

&lt;h4 id=&quot;11-xcode-버전-확인&quot;&gt;1.1 Xcode 버전 확인&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Xcode 버전은 사진과 같이 상단 메뉴 바에서 &lt;strong&gt;Xcode - About Xcode &lt;/strong&gt;를 눌러보면 확인할 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;12-ios-버전-확인&quot;&gt;1.2 iOS 버전 확인&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;영어&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;General - About&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;한글&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;설정 - 일반 - 정보&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;여기서 &lt;strong&gt;Xcode와 iOS의 버전(소수점)이 동일한지 확인&lt;/strong&gt;해주면 된다.&lt;/p&gt;

&lt;p&gt;두 버전이 같지 않다면, 쉽게 맞출 수 있는 방법으로 둘다 최신으로 업데이트해주면 된다.&lt;/p&gt;

&lt;p&gt;(19.12.21 기준 Xcode 최신 버전 11.3, iOS 최신 버전 13.3)&lt;/p&gt;

&lt;h3 id=&quot;2-애플-개발자-계정-추가하기&quot;&gt;2. 애플 개발자 계정 추가하기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;개발자 계정 추가는 메뉴에서 &lt;strong&gt;Xcode - Preferences - Accounts - +버튼&lt;/strong&gt;으로 Apple 계정의 ID와 PW를 입력하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;계정 추가를 마친 화면은 위의 사진과 같다.(개인정보는 가렸어요.)&lt;/p&gt;

&lt;h3 id=&quot;3-앱-서명하기-sign-the-app&quot;&gt;3. 앱 서명하기 (sign the app)&lt;/h3&gt;

&lt;p&gt;sign을 임의로 저렇게 번역했는데, 사실 정확하게 의미를 전달했는지 잘 모르겠다ㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사진과 같이 왼쪽 메뉴에서 프로젝트를 클릭하고 상단에 &lt;strong&gt;Signing &amp;amp; Capabilities&lt;/strong&gt;를 눌러 나오는 내용을 확인한다.&lt;/p&gt;

&lt;p&gt;여기에서 확인한 부분은 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Automatically manage signing에 체크가 되어 있는지&lt;/li&gt;
  &lt;li&gt;Team이 아까 2번에서  추가한 계정으로 되어 있는지&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이제 아이폰을 연결하고 첫 번째 사진의 빨간 박스 부분을 두 번째 사진과 같이 바꿔준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/6.png&quot; alt=&quot;pic1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/7.png&quot; alt=&quot;pic2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 빌드를 하면 끝이 난다.&lt;/p&gt;

&lt;p&gt;참고로 빌드할 때, 나오는 keychain은 따로 변경하지 않았다면, 맥의 비밀번호를 입력하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/post_img/191221/8.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또, 맥과 아이폰이 같은 네트워크에 연결되어 있다면 &lt;strong&gt;Window - Device and Simulators&lt;/strong&gt;에서 &lt;strong&gt;Connect via network&lt;/strong&gt; 박스에 체크해줌으로써 맥과 아이폰을  연결하지 않고  블루투스로도 빌드가 가능하다.&lt;/p&gt;

&lt;p&gt;혹시라도 잘못된 부분이 있으면 알려주세요!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Introducing Lanyon</title>
   <link href="http://localhost:4000/2014/01/02/introducing-lanyon/"/>
   <updated>2014-01-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/2014/01/02/introducing-lanyon</id>
   <content type="html">&lt;p&gt;Lanyon is an unassuming &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; theme that places content first by tucking away navigation in a hidden drawer. It’s based on &lt;a href=&quot;http://getpoole.com&quot;&gt;Poole&lt;/a&gt;, the Jekyll butler.&lt;/p&gt;

&lt;h3 id=&quot;built-on-poole&quot;&gt;Built on Poole&lt;/h3&gt;

&lt;p&gt;Poole is the Jekyll Butler, serving as an upstanding and effective foundation for Jekyll themes by &lt;a href=&quot;https://twitter.com/mdo&quot;&gt;@mdo&lt;/a&gt;. Poole, and every theme built on it (like Lanyon here) includes the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Complete Jekyll setup included (layouts, config, &lt;a href=&quot;/404&quot;&gt;404&lt;/a&gt;, &lt;a href=&quot;/atom.xml&quot;&gt;RSS feed&lt;/a&gt;, posts, and &lt;a href=&quot;/about&quot;&gt;example page&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Mobile friendly design and development&lt;/li&gt;
  &lt;li&gt;Easily scalable text and component sizing with &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt; units in the CSS&lt;/li&gt;
  &lt;li&gt;Support for a wide gamut of HTML elements&lt;/li&gt;
  &lt;li&gt;Related posts (time-based, because Jekyll) below each post&lt;/li&gt;
  &lt;li&gt;Syntax highlighting, courtesy Pygments (the Python-based code snippet highlighter)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lanyon-features&quot;&gt;Lanyon features&lt;/h3&gt;

&lt;p&gt;In addition to the features of Poole, Lanyon adds the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Toggleable sliding sidebar (built with only CSS) via &lt;strong&gt;☰&lt;/strong&gt; link in top corner&lt;/li&gt;
  &lt;li&gt;Sidebar includes support for textual modules and a dynamically generated navigation with active link support&lt;/li&gt;
  &lt;li&gt;Two orientations for content and sidebar, default (left sidebar) and &lt;a href=&quot;https://github.com/poole/lanyon#reverse-layout&quot;&gt;reverse&lt;/a&gt; (right sidebar), available via &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/poole/lanyon#themes&quot;&gt;Eight optional color schemes&lt;/a&gt;, available via &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/lanyon#readme&quot;&gt;Head to the readme&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;h3 id=&quot;browser-support&quot;&gt;Browser support&lt;/h3&gt;

&lt;p&gt;Lanyon is by preference a forward-thinking project. In addition to the latest versions of Chrome, Safari (mobile and desktop), and Firefox, it is only compatible with Internet Explorer 9 and above.&lt;/p&gt;

&lt;h3 id=&quot;download&quot;&gt;Download&lt;/h3&gt;

&lt;p&gt;Lanyon is developed on and hosted with GitHub. Head to the &lt;a href=&quot;https://github.com/poole/lanyon&quot;&gt;GitHub repository&lt;/a&gt; for downloads, bug reports, and features requests.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/2014/01/01/example-content/"/>
   <updated>2014-01-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/2014/01/01/example-content</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Howdy! This is an example blog post that shows several types of HTML content supported in this theme.
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code class=&quot;highlighter-rouge&quot;&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console
&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return a + b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function
&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's Jekyll?</title>
   <link href="http://localhost:4000/2013/12/31/whats-jekyll/"/>
   <updated>2013-12-31T00:00:00+09:00</updated>
   <id>http://localhost:4000/2013/12/31/whats-jekyll</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator, an open-source tool for creating simple yet powerful websites of all shapes and sizes. From &lt;a href=&quot;https://github.com/mojombo/jekyll/blob/master/README.markdown&quot;&gt;the project’s readme&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory […] and spits out a complete, static website suitable for serving with Apache or your favorite web server. This is also the engine behind GitHub Pages, which you can use to host your project’s page or blog right here from GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s an immensely useful tool and one we encourage you to use here with Lanyon.&lt;/p&gt;

&lt;p&gt;Find out more by &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;visiting the project on GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 

</feed>
